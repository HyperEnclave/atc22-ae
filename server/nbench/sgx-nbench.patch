diff --git a/App/App.cpp b/App/App.cpp
index fd84726..8773b90 100644
--- a/App/App.cpp
+++ b/App/App.cpp
@@ -5,7 +5,7 @@
 #include <pwd.h>
 #define MAX_PATH FILENAME_MAX
 #include "sgx_urts.h"
-#include "sgx_status.h"
+// #include "sgx_status.h"
 #include "App.h"
 #include "Enclave_u.h"
 
diff --git a/Enclave/Enclave.lds b/Enclave/Enclave.lds
index e3d9d0e..2ace8b0 100644
--- a/Enclave/Enclave.lds
+++ b/Enclave/Enclave.lds
@@ -3,6 +3,7 @@ enclave.so
     global:
         g_global_data_sim;
         g_global_data;
+        g_global_data_hyper;
         enclave_entry;
     local:
         *;
diff --git a/Makefile b/Makefile
index 5abf919..bc86f69 100644
--- a/Makefile
+++ b/Makefile
@@ -12,15 +12,21 @@ else ifeq ($(findstring -m32, $(CXXFLAGS)), -m32)
 	SGX_ARCH := x86
 endif
 
+ifeq ($(SGX_MODE), HYPER)
+	SGX_SIGN = sgx_sign_hyper
+else
+	SGX_SIGN = sgx_sign
+endif
+
 ifeq ($(SGX_ARCH), x86)
 	SGX_COMMON_CFLAGS := -m32
 	SGX_LIBRARY_PATH := $(SGX_SDK)/lib
-	SGX_ENCLAVE_SIGNER := $(SGX_SDK)/bin/x86/sgx_sign
+	SGX_ENCLAVE_SIGNER := $(SGX_SDK)/bin/x86/$(SGX_SIGN)
 	SGX_EDGER8R := $(SGX_SDK)/bin/x86/sgx_edger8r
 else
 	SGX_COMMON_CFLAGS := -m64
 	SGX_LIBRARY_PATH := $(SGX_SDK)/lib64
-	SGX_ENCLAVE_SIGNER := $(SGX_SDK)/bin/x64/sgx_sign
+	SGX_ENCLAVE_SIGNER := $(SGX_SDK)/bin/x64/$(SGX_SIGN)
 	SGX_EDGER8R := $(SGX_SDK)/bin/x64/sgx_edger8r
 endif
 
@@ -38,8 +44,10 @@ endif
 
 ######## App Settings ########
 
-ifneq ($(SGX_MODE), HW)
+ifeq ($(SGX_MODE), SIM)
 	Urts_Library_Name := sgx_urts_sim
+else ifeq ($(SGX_MODE), HYPER)
+	Urts_Library_Name := sgx_urts_hyper
 else
 	Urts_Library_Name := sgx_urts
 endif
@@ -78,10 +86,14 @@ App_Name := app
 
 ######## Enclave Settings ########
 
-ifneq ($(SGX_MODE), HW)
+ifeq ($(SGX_MODE), SIM)
 	Trts_Library_Name := sgx_trts_sim
 	Service_Library_Name := sgx_tservice_sim
 	Crypto_Library_Name := sgx_tcrypto
+else ifeq ($(SGX_MODE), HYPER)
+	Trts_Library_Name := sgx_trts_hyper
+	Service_Library_Name := sgx_tservice_hyper
+	Crypto_Library_Name := sgx_tcrypto
 else
 	Trts_Library_Name := sgx_trts
 	Service_Library_Name := sgx_tservice
@@ -95,7 +107,7 @@ Enclave_C_Flags := $(SGX_COMMON_CFLAGS) -nostdinc -fvisibility=hidden -fpie -fst
 Enclave_Cpp_Flags := $(Enclave_C_Flags) -std=c++03 -nostdinc++
 Enclave_Link_Flags := $(SGX_COMMON_CFLAGS) -Wl,--no-undefined -nostdlib -nodefaultlibs -nostartfiles -L$(SGX_LIBRARY_PATH) \
 	-Wl,--whole-archive -l$(Trts_Library_Name) -Wl,--no-whole-archive \
-	-Wl,--start-group -lsgx_tstdc -lsgx_tstdcxx -l$(Crypto_Library_Name) -l$(Service_Library_Name) -Wl,--end-group \
+	-Wl,--start-group -lsgx_tstdc -l$(Crypto_Library_Name) -l$(Service_Library_Name) -Wl,--end-group \
 	-Wl,-Bstatic -Wl,-Bsymbolic -Wl,--no-undefined \
 	-Wl,-pie,-eenclave_entry -Wl,--export-dynamic  \
 	-Wl,--defsym,__ImageBase=0 \
@@ -108,10 +120,28 @@ Signed_Enclave_Name := enclave.signed.so
 Enclave_Config_File := Enclave/Enclave.config.xml
 
 ifeq ($(SGX_MODE), HW)
-ifneq ($(SGX_DEBUG), 1)
-ifneq ($(SGX_PRERELEASE), 1)
-Build_Mode = HW_RELEASE
+ifeq ($(SGX_DEBUG), 1)
+	Build_Mode = HW_DEBUG
+else ifeq ($(SGX_PRERELEASE), 1)
+	Build_Mode = HW_PRERELEASE
+else
+	Build_Mode = HW_RELEASE
 endif
+else ifeq ($(SGX_MODE), HYPER)
+ifeq ($(SGX_DEBUG), 1)
+	Build_Mode = HYPER_DEBUG
+else ifeq ($(SGX_PRERELEASE), 1)
+	Build_Mode = HYPER_PRERELEASE
+else
+	Build_Mode = HYPER_RELEASE
+endif
+else
+ifeq ($(SGX_DEBUG), 1)
+	Build_Mode = SIM_DEBUG
+else ifeq ($(SGX_PRERELEASE), 1)
+	Build_Mode = SIM_PRERELEASE
+else
+	Build_Mode = SIM_RELEASE
 endif
 endif
 
@@ -128,6 +158,23 @@ all: $(App_Name) $(Enclave_Name)
 	@echo "To build the project in simulation mode set SGX_MODE=SIM. To build the project in prerelease mode set SGX_PRERELEASE=1 and SGX_MODE=HW."
 else
 all: $(App_Name) $(Signed_Enclave_Name)
+ifeq ($(Build_Mode), HW_DEBUG)
+	@echo "The project has been built in debug hardware mode."
+else ifeq ($(Build_Mode), SIM_DEBUG)
+	@echo "The project has been built in debug simulation mode."
+else ifeq ($(Build_Mode), HYPER_DEBUG)
+	@echo "The project has been built in debug hyper mode."
+else ifeq ($(Build_Mode), HW_PRERELEASE)
+	@echo "The project has been built in pre-release hardware mode."
+else ifeq ($(Build_Mode), SIM_PRERELEASE)
+	@echo "The project has been built in pre-release simulation mode."
+else ifeq ($(Build_Mode), HYPER_PRERELEASE)
+	@echo "The project has been built in pre-release hyper mode."
+else ifeq ($(Build_Mode), SIM_RELEASE)
+	@echo "The project has been built in release simulation mode."
+else
+	@echo "The project has been built in release hyper mode."
+endif
 endif
 
 run: all
@@ -139,7 +186,7 @@ endif
 ######## App Objects ########
 
 App/Enclave_u.c: $(SGX_EDGER8R) Enclave/Enclave.edl
-	@cd App && $(SGX_EDGER8R) --untrusted ../Enclave/Enclave.edl --search-path ../Enclave --search-path $(SGX_SDK)/include
+	@cd App && $(SGX_EDGER8R) --sgx-mode $(SGX_MODE) --untrusted ../Enclave/Enclave.edl --search-path ../Enclave --search-path $(SGX_SDK)/include
 	@echo "GEN  =>  $@"
 
 App/Enclave_u.o: App/Enclave_u.c
@@ -161,7 +208,7 @@ $(App_Name): App/Enclave_u.o $(App_Cpp_Objects)
 ######## Enclave Objects ########
 
 Enclave/Enclave_t.c: $(SGX_EDGER8R) Enclave/Enclave.edl
-	@cd Enclave && $(SGX_EDGER8R) --trusted ../Enclave/Enclave.edl --search-path ../Enclave --search-path $(SGX_SDK)/include
+	@cd Enclave && $(SGX_EDGER8R) --sgx-mode $(SGX_MODE) --trusted ../Enclave/Enclave.edl --search-path ../Enclave --search-path $(SGX_SDK)/include
 	@echo "GEN  =>  $@"
 
 Enclave/Enclave_t.o: Enclave/Enclave_t.c 
